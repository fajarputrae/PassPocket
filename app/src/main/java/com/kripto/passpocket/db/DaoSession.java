package com.kripto.passpocket.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.kripto.passpocket.db.PassStorage;

import com.kripto.passpocket.db.PassStorageDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig passStorageDaoConfig;

    private final PassStorageDao passStorageDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        passStorageDaoConfig = daoConfigMap.get(PassStorageDao.class).clone();
        passStorageDaoConfig.initIdentityScope(type);

        passStorageDao = new PassStorageDao(passStorageDaoConfig, this);

        registerDao(PassStorage.class, passStorageDao);
    }
    
    public void clear() {
        passStorageDaoConfig.clearIdentityScope();
    }

    public PassStorageDao getPassStorageDao() {
        return passStorageDao;
    }

}
